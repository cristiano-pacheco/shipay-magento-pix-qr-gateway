<?php

declare(strict_types=1);

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Shipay
 * @package Shipay_PixQrGateway
 * @copyright Copyright (c) 2021 Shipay
 * @author Shipay <ajuda@shipay.com.br>
 *
 * See LICENSE for license details.
 */

namespace Shipay\PixQrGateway\Gateway\StatusUpdater;

use Psr\Log\LoggerInterface;
use Shipay\PixQrGateway\Gateway\Config\Config;
use Shipay\PixQrGateway\Gateway\Http\GetPaymentTransaction;
use Shipay\PixQrGateway\Gateway\StatusUpdater\Model\PendingTransaction;

class Client
{
    /**
     * @var LoggerInterface
     */
    private $logger;

    /**
     * @var Config
     */
    private $config;

    /**
     * @var PendingTransaction
     */
    private $pendingTransaction;

    /**
     * @var GetPaymentTransaction
     */
    private $getPaymentTransaction;

    /**
     * Client constructor.
     * @param LoggerInterface $logger
     * @param Config $config
     * @param PendingTransaction $pendingTransaction
     * @param GetPaymentTransaction $getPaymentTransaction
     */
    public function __construct(
        LoggerInterface $logger,
        Config $config,
        PendingTransaction $pendingTransaction,
        GetPaymentTransaction $getPaymentTransaction
    ) {
        $this->logger = $logger;
        $this->config = $config;
        $this->pendingTransaction = $pendingTransaction;
        $this->getPaymentTransaction = $getPaymentTransaction;
    }

    /**
     * @return array
     * @throws \Exception
     */
    public function placeRequest()
    {
        $transactions = [];

        $orders = $this->pendingTransaction->getOrders();

        if (empty($orders)) {
            return $transactions;
        }

        foreach ($orders as $order) {
            $transaction = $this->getPaymentTransaction->placeRequest($order['transaction_id']);
            if (!empty($transaction)) {
                $transaction['order_id'] = $order['order_id'];
                $transaction['payment_id'] = $order['payment_id'];
                $transaction['grand_total'] = $order['grand_total'];
                array_push($transactions, $transaction);
            }
        }

        return $transactions;
    }

    /**
     * @param array $order
     * @return array|bool
     * @throws \Exception
     */
    public function placeRequestByOrder($order)
    {
        if (!isset($order['transaction_id'])) {
            return [];
        }

        $transaction = $this->getPaymentTransaction->placeRequest($order['transaction_id']);

        if (!empty($transaction)) {
            $transaction['order_id'] = $order['order_id'] ?? '';
            $transaction['payment_id'] = $order['payment_id'] ?? '';
            $transaction['grand_total'] = $order['grand_total'] ?? '';
        }

        return $transaction;
    }
}
