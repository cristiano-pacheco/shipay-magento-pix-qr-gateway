<?php

declare(strict_types=1);

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Shipay
 * @package Shipay_PixQrGateway
 * @copyright Copyright (c) 2021 Shipay
 * @author Shipay <ajuda@shipay.com.br>
 *
 * See LICENSE for license details.
 */

namespace Shipay\PixQrGateway\Model\Traits;

use Magento\Framework\Phrase;
use Shipay\PixQrGateway\Gateway\Response\ResponseFieldsInterface;
use Shipay\PixQrGateway\Model\Wallet;

trait PaymentTrait
{
    /**
     * @return Phrase
     */
    public function getSuccessWebMessage()
    {
        // phpcs:disable
        if ($this->isToShowDeepLink()) {
            return __('To make the payment, open the digital wallet application on your cell phone and scan the QR Code.');
        }

        return __('To make the payment, open the application of your financial institution, look for the section PIX / pay QR Code and read the QR Code.');
        // phpcs:enable
    }

    /**
     * @return Phrase
     */
    public function getSuccessMobileMessage()
    {
        if ($this->isToShowDeepLink()) {
            return __('To make the payment, click on the button to be directed to the digital wallet application.');
        }

        // phpcs:disable
        return __('To make the payment, copy the code and paste it into the appropriate location in the PIX / copy and paste section of your financial institution\'s application.');
        // phpcs:enable
    }

    /**
     * @return bool
     */
    public function isToShowDeepLink()
    {
        $paymentInformation = $this->getPaymentAdditionalInformation();

        return !empty($paymentInformation[ResponseFieldsInterface::WALLET]) &&
            !in_array($paymentInformation[ResponseFieldsInterface::WALLET], [Wallet::PIX, Wallet::SHIPAY_PAGADOR]) &&
            !empty($paymentInformation[ResponseFieldsInterface::DEEP_LINK]);
    }

    /**
     * @return bool
     */
    public function isToShowPixCopyPasteButton()
    {
        $paymentInformation = $this->getPaymentAdditionalInformation();

        return !empty($paymentInformation[ResponseFieldsInterface::WALLET]) &&
            $paymentInformation[ResponseFieldsInterface::WALLET] === Wallet::PIX &&
            $paymentInformation[ResponseFieldsInterface::QR_CODE_TEXT];
    }

    /**
     * @return string|null
     */
    public function getWalletLabel()
    {
        $paymentInformation = $this->getPaymentAdditionalInformation();

        return isset($paymentInformation[ResponseFieldsInterface::WALLET])
            ? $this->wallet->getWalletLabel($paymentInformation[ResponseFieldsInterface::WALLET])
            : null;
    }
}
